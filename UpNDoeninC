#include <pthread.h>
#include <stdio.h>





int j = 0;
pthread_mutex_t jlock;

void* func1(){
	
	for(int i = 0; i < 1000000; i++){
		pthread_mutex_lock(&jlock);
		j++;
		pthread_mutex_unlock(&jlock);
	}
	
	return NULL;
}

void* func2(){
	
	for(int i = 0; i < 1000000; i++){
		pthread_mutex_lock(&jlock);
		j--;
		pthread_mutex_unlock(&jlock);
	}
	return NULL;
}


int main(){
	pthread_mutex_init(&jlock,NULL);
	pthread_t thread1, thread2;


	pthread_create(&thread1, NULL, func1, NULL);
	pthread_create(&thread2, NULL, func2, NULL);
	pthread_join(thread1, NULL);
	pthread_join(thread2, NULL);
	printf("%d\n", j);
} 
